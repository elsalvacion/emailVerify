{"version":3,"sources":["context/Types.js","context/emailReducer.js","context/emailContext.js","context/EmailState.js","layout/Header.js","components/Spinner.js","components/Hints.js","components/Verified.js","components/RightSide.js","components/ReadCsv.js","layout/Content.js","App.js","index.js"],"names":["SET_PROCESSING","SET_RESULT","RESET","emailReducer","state","action","type","processing","result","payload","emailContext","createContext","EmailState","props","useReducer","data","dispatch","process","jsonArray","index","a","setprocessing","re","emails","filtered","columns","forEach","test","push","fetch","method","headers","body","JSON","stringify","res","json","i","msg","indexOf","reset","newCsvData","fields","field","setResult","emailIndex","noOfCorrectEmails","length","noOfWrongEmails","wrongEmails","csv","Provider","value","children","useStyles","makeStyles","nav","boxShadow","marginBottom","padding","textAlign","color","Header","classes","useState","count","setCount","useEffect","className","Container","avgTypingDelay","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","onTypingDone","Typography","variant","Backspace","delay","Spinner","Hints","align","List","ListItem","ListItemText","primary","background","Verified","style","Card","filename","margin","outline","card","minHeight","maxHeight","height","spinner","display","alignItems","flexDirection","RightSide","useContext","EmailContext","downloading","uploading","elevation","CardContent","uploadBtn","marginTop","width","ReadCsv","setData","status","error","setError","onDrop","onError","err","file","inputElem","reason","console","log","addRemoveButton","removeButtonColor","onRemoveFile","Button","endIcon","onClick","disabled","Content","Grid","container","item","xs","sm","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d1fea99.chunk.js","sourcesContent":["export const SET_PROCESSING = \"SET_PROCESSING\";\nexport const SET_RESULT = \"SET_RESULT\";\n\nexport const RESET = \"RESET\";\n","import { SET_PROCESSING, RESET, SET_RESULT } from \"./Types\";\n\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case SET_PROCESSING:\n      return {\n        ...state,\n        processing: true,\n      };\n\n    case RESET:\n      return {\n        ...state,\n        processing: false,\n      };\n\n    case SET_RESULT:\n      return {\n        ...state,\n        processing: false,\n        result: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default emailReducer;\n","import { createContext } from \"react\";\n\nconst emailContext = createContext();\n\nexport default emailContext;\n","import { useReducer } from \"react\";\nimport emailReducer from \"./emailReducer\";\nimport emailContext from \"./emailContext\";\nimport { SET_PROCESSING, RESET, SET_RESULT } from \"./Types\";\n\nconst EmailState = (props) => {\n  const initialState = {\n    processing: false,\n    result: null,\n    data: null,\n  };\n\n  const [state, dispatch] = useReducer(emailReducer, initialState);\n\n  const process = async (jsonArray, index) => {\n    setprocessing();\n    const re = /\\S+@\\S+\\.\\S+/;\n    let emails = [];\n    const filtered = [];\n    let columns = null;\n    jsonArray.forEach((data) => {\n      if (re.test(data.data[index])) {\n        emails.push(data.data[index]);\n      }\n    });\n\n    const res = await fetch(`/email/filter`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        emails,\n      }),\n    });\n    const json = await res.json();\n\n    if (json) {\n      jsonArray.forEach((data, i) => {\n        if (i === 0) columns = data.data;\n        if (json.msg.indexOf(data.data[index]) !== -1) {\n          filtered.push(data.data);\n        }\n      });\n\n      reset();\n\n      const newCsvData = [];\n      filtered.forEach((data) => {\n        let fields = {};\n        data.forEach((field, i) => {\n          fields[columns[i]] = field;\n        });\n        newCsvData.push(fields);\n      });\n      setResult({\n        data: filtered,\n        emailIndex: index,\n        noOfCorrectEmails: json.msg.length,\n        noOfWrongEmails: json.wrongEmails.length,\n        csv: newCsvData,\n      });\n    }\n  };\n\n  const setprocessing = () => {\n    dispatch({\n      type: SET_PROCESSING,\n    });\n  };\n\n  const setResult = (payload) => {\n    dispatch({\n      type: SET_RESULT,\n      payload,\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: RESET,\n    });\n  };\n\n  return (\n    <emailContext.Provider\n      value={{\n        processing: state.processing,\n        result: state.result,\n        process,\n      }}\n    >\n      {props.children}\n    </emailContext.Provider>\n  );\n};\n\nexport default EmailState;\n","import { Container, Typography } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typist from \"react-typist\";\nconst useStyles = makeStyles({\n  nav: {\n    boxShadow: \"0 1px 1px #f5f5f5 \",\n    marginBottom: 50,\n    padding: 10,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n});\nconst Header = () => {\n  const classes = useStyles();\n  const [count, setCount] = useState(1);\n\n  useEffect(() => {\n    setCount(1);\n  }, [count]);\n\n  return (\n    <div className={classes.nav}>\n      <Container>\n        {count ? (\n          <Typist\n            avgTypingDelay={50}\n            cursor={{\n              show: true,\n              blink: true,\n              element: \"\",\n              hideWhenDone: false,\n              hideWhenDoneDelay: 1000,\n            }}\n            onTypingDone={() => setCount(0)}\n          >\n            <Typography variant=\"h4\">Email Verify</Typography>\n            <Typist.Backspace count={11} delay={800} />\n          </Typist>\n        ) : (\n          \"\"\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Hints = () => {\n  return (\n    <div>\n      <Typography align=\"center\" variant=\"h5\">\n        Hints\n      </Typography>\n      <List>\n        <ListItem>\n          <ListItemText primary=\"1. Upload CSV format file \" />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary=\"2. Emails must be in 1 column (You may include unlimited columns of other data).\" />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary=\"3. When finished uploading, you may analyze or clean your list.\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Hints;\n","import React, { Fragment } from \"react\";\n\nimport { Typography, Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { CSVDownloader } from \"react-papaparse\";\n\nconst useStyles = makeStyles({\n  result: {\n    // minWidth: \"90%\",\n    // maxWidth: \"90%\",\n    // minHeight: \"50vh\",\n    // maxHeight: \"50vh\",\n    background: \"transparent\",\n    // border: \"1px solid #f5f5f5\",\n    color: \"white\",\n    // overflowY: \"auto\",\n    // position: \"relative\",\n\n    // \"&:focus\": {\n    //   outline: 0,\n    // },\n  },\n});\nconst Verified = ({ result }) => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <Typography style={{ color: \"#bdbdbd\" }}>\n        Here are you verify emails\n      </Typography>\n      <br />\n\n      <Card className={classes.result}>\n        {/* {result.data.map(\n          (field, i) =>\n            i !== 0 && (\n              <Typography style={{ padding: \"5px\" }}>\n                {field[result.emailIndex]}\n              </Typography>\n            )\n        )} */}\n\n        <Typography variant=\"h6\">\n          {result.noOfCorrectEmails} emails verfied\n        </Typography>\n      </Card>\n      {/* {console.log(result.csv)} */}\n      <CSVDownloader\n        data={result.csv}\n        type=\"button\"\n        filename={\"verifiedEmails\"}\n        style={{\n          background: \"#f5f5f5\",\n          padding: 10,\n          margin: \"10px 0\",\n          cursor: \"pointer\",\n\n          \"&:focus\": {\n            outline: 0,\n          },\n        }}\n      >\n        Download CSV\n      </CSVDownloader>\n    </Fragment>\n  );\n};\n\nexport default Verified;\n","import { Card, CardContent, Container, Typography } from \"@material-ui/core\";\nimport React, { useContext, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Spinner from \"./Spinner\";\nimport Hints from \"./Hints\";\nimport EmailContext from \"../context/emailContext\";\nimport Verified from \"./Verified\";\nconst useStyles = makeStyles({\n  card: {\n    minHeight: \"82vh\",\n    maxHeight: \"82vh\",\n    background: \"transparent\",\n    color: \"#f5f5f5\",\n    \"@media (max-width:780px)\": {\n      // eslint-disable-line no-useless-computed-key\n      maxHeight: \"82vh\",\n      height: \"fit-content\",\n    },\n  },\n  spinner: {\n    padding: 25,\n    marginBottom: 5,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n});\nconst RightSide = () => {\n  const classes = useStyles();\n  const { processing, downloading, uploading, result } =\n    useContext(EmailContext);\n  return (\n    <Card elevation={2} className={classes.card}>\n      <CardContent>\n        <Container className={classes.spinner}>\n          {!result || processing ? (\n            <Fragment>\n              <Hints />\n              {(uploading || processing || downloading) && <Spinner />}\n              {uploading && <Typography>uploading ...</Typography>}\n              {processing && <Typography>processing ...</Typography>}\n              {downloading && <Typography>downloading results ...</Typography>}\n            </Fragment>\n          ) : (\n            <Verified result={result} />\n          )}\n        </Container>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RightSide;\n","import React, { useState, useContext } from \"react\";\nimport { CSVReader } from \"react-papaparse\";\nimport { Button, Container, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport EmailContext from \"../context/emailContext\";\n\nconst useStyles = makeStyles({\n  uploadBtn: {\n    marginTop: 15,\n    width: \"fit-content\",\n  },\n});\n\nconst ReadCsv = () => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState({\n    status: false,\n    msg: null,\n  });\n\n  const { processing, process } = useContext(EmailContext);\n\n  const handleOnDrop = (json) => {\n    setData(json);\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = (json) => {\n    setData(json);\n  };\n\n  const uploadAndAnalyze = () => {\n    const emailIndex =\n      data[0].data.indexOf(\"email\") !== -1\n        ? data[0].data.indexOf(\"email\")\n        : data[0].data.indexOf(\"emails\") !== -1\n        ? data[0].data.indexOf(\"emails\")\n        : -1;\n\n    if (!data) {\n      setError({\n        status: true,\n        msg: \"Please upload a file\",\n      });\n    } else if (emailIndex === -1) {\n      setError({\n        status: true,\n        msg: \"File must contain a column containing emails or email\",\n      });\n    } else {\n      setError({\n        status: false,\n        msg: null,\n      });\n      process(data, emailIndex);\n    }\n  };\n\n  return (\n    <Container>\n      {error.status && (\n        <Typography variant=\"h6\" style={{ color: \"#f5f5f5\" }}>\n          {error.msg}\n        </Typography>\n      )}\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        addRemoveButton\n        removeButtonColor=\"#659cef\"\n        onRemoveFile={handleOnRemoveFile}\n      >\n        <span style={{ padding: \"50px 0\", color: \"#f5f5f5\" }}>\n          Drop CSV file here or click to upload.\n        </span>\n      </CSVReader>\n      <Button\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.uploadBtn}\n        endIcon={<ChevronRightIcon style={{ color: \"black\" }} />}\n        onClick={uploadAndAnalyze}\n        disabled={!data || data.length === 0 || processing}\n      >\n        ANALYZE & CLEAN\n      </Button>\n    </Container>\n  );\n};\n\nexport default ReadCsv;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport RightSide from \"../components/RightSide\";\n// import UploadFrom from \"../components/UploadFrom\";\n// import EmailContext from \"../context/emailContext\";\nimport Zoom from \"react-reveal/Zoom\";\nimport ReadCsv from \"../components/ReadCsv\";\nconst Content = () => {\n  // const { processing, downloading, uploading } = useContext(EmailContext);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={6}>\n        <Zoom>\n          {/* <UploadFrom /> */}\n          <ReadCsv />\n        </Zoom>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Zoom>\n          <RightSide />\n        </Zoom>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n","import EmailState from \"./context/EmailState\";\nimport \"./App.css\";\nimport { Container } from \"@material-ui/core\";\nimport Header from \"./layout/Header\";\nimport Content from \"./layout/Content\";\n\nfunction App() {\n  return (\n    <EmailState>\n      <Header />\n      <Container>\n        <Content />\n      </Container>\n    </EmailState>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}