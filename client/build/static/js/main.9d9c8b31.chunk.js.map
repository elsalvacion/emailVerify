{"version":3,"sources":["context/Types.js","context/emailReducer.js","context/emailContext.js","config.js","context/EmailState.js","layout/Header.js","components/Spinner.js","components/Hints.js","components/Verified.js","components/RightSide.js","components/UploadFrom.js","layout/Content.js","App.js","index.js"],"names":["SET_UPLOADING","SET_PROCESSING","SET_DOWNLOADING","SET_RESULT","RESET","emailReducer","state","action","type","result","uploading","processing","downloading","payload","emailContext","createContext","config","url","EmailState","props","useReducer","dispatch","upload","files","a","setUploading","formData","FormData","append","fetch","method","body","res","json","status","process","newName","name","setprocessing","headers","JSON","stringify","reset","setResult","download","data","setDownloading","Provider","value","children","useStyles","makeStyles","nav","boxShadow","marginBottom","padding","textAlign","color","Header","classes","useState","count","setCount","useEffect","className","Container","avgTypingDelay","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","onTypingDone","Typography","variant","Backspace","delay","Spinner","class","Hints","List","ListItem","ListItemText","primary","minWidth","maxWidth","minHeight","maxHeight","background","border","overflowY","position","outline","Verified","style","msg","map","email","filtered","card","height","spinner","display","alignItems","flexDirection","RightSide","useContext","EmailContext","Card","elevation","CardContent","container","justifyContent","uploadBtn","marginTop","width","UploadFrom","file","setFiles","error","setError","acceptedFiles","showPreviews","maxFileSize","onChange","Button","endIcon","onClick","length","disabled","Content","Grid","item","xs","sm","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d9c8b31.chunk.js","sourcesContent":["export const SET_UPLOADING = \"SET_UPLOADING\";\n\nexport const GET_UPLOADING = \"GET_UPLOADING\";\n\nexport const SET_PROCESSING = \"SET_PROCESSING\";\n\nexport const GET_PROCESSING = \"GET_PROCESSING\";\n\nexport const SET_DOWNLOADING = \"SET_DOWNLOADING\";\n\nexport const GET_DOWNLOADING = \"GET_DOWNLOADING\";\n\nexport const SET_RESULT = \"SET_RESULT\";\n\nexport const RESET = \"RESET\";\n","import {\n  SET_PROCESSING,\n  SET_UPLOADING,\n  SET_DOWNLOADING,\n  RESET,\n  SET_RESULT,\n} from \"./Types\";\n\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case SET_UPLOADING:\n      return {\n        ...state,\n        result: null,\n        uploading: true,\n        processing: false,\n        downloading: false,\n      };\n    case SET_PROCESSING:\n      return {\n        ...state,\n        processing: true,\n        uploading: false,\n        downloading: false,\n      };\n    case SET_DOWNLOADING:\n      return {\n        ...state,\n        downloading: true,\n        processing: false,\n        uploading: false,\n      };\n\n    case RESET:\n      return {\n        ...state,\n        downloading: false,\n        processing: false,\n        uploading: false,\n      };\n\n    case SET_RESULT:\n      return {\n        ...state,\n        downloading: false,\n        processing: false,\n        uploading: false,\n        result: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default emailReducer;\n","import { createContext } from \"react\";\n\nconst emailContext = createContext();\n\nexport default emailContext;\n","const config = {\n  url: \"https://valid-email.herokuapp.com\",\n  // url: \"http://localhost:5000\",\n};\n\nexport default config;\n","import { useReducer } from \"react\";\nimport emailReducer from \"./emailReducer\";\nimport emailContext from \"./emailContext\";\nimport {\n  SET_PROCESSING,\n  SET_UPLOADING,\n  SET_DOWNLOADING,\n  RESET,\n  SET_RESULT,\n} from \"./Types\";\n\nimport config from \"../config\";\n\nconst EmailState = (props) => {\n  const initialState = {\n    uploading: false,\n    processing: false,\n    downloading: false,\n    result: null,\n  };\n\n  const [state, dispatch] = useReducer(emailReducer, initialState);\n\n  const upload = async (files) => {\n    setUploading();\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n    const res = await fetch(`${config.url}/email/upload`, {\n      method: \"POST\",\n      body: formData,\n    });\n    const json = await res.json();\n    if (res.status) {\n      process(json.newName);\n    }\n  };\n\n  const process = async (name) => {\n    setprocessing();\n    const res = await fetch(`${config.url}/email/filter`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n      }),\n    });\n    const json = await res.json();\n\n    if (res.status) {\n      reset();\n      setResult(json);\n    }\n  };\n\n  const download = async (newName, data) => {\n    setDownloading();\n    const res = await fetch(`${config.url}/email/delete`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        newName,\n      }),\n    });\n\n    if (res.status) {\n      reset();\n      setResult(data);\n    }\n  };\n\n  const setUploading = () => {\n    dispatch({\n      type: SET_UPLOADING,\n    });\n  };\n\n  const setprocessing = () => {\n    dispatch({\n      type: SET_PROCESSING,\n    });\n  };\n\n  const setDownloading = () => {\n    dispatch({\n      type: SET_DOWNLOADING,\n    });\n  };\n  const setResult = (payload) => {\n    dispatch({\n      type: SET_RESULT,\n      payload,\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: RESET,\n    });\n  };\n\n  return (\n    <emailContext.Provider\n      value={{\n        uploading: state.uploading,\n        processing: state.processing,\n        downloading: state.downloading,\n        result: state.result,\n        upload,\n        process,\n        download,\n      }}\n    >\n      {props.children}\n    </emailContext.Provider>\n  );\n};\n\nexport default EmailState;\n","import { Container, Typography } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typist from \"react-typist\";\nconst useStyles = makeStyles({\n  nav: {\n    boxShadow: \"0 1px 1px #f5f5f5 \",\n    marginBottom: 50,\n    padding: 10,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n});\nconst Header = () => {\n  const classes = useStyles();\n  const [count, setCount] = useState(1);\n\n  useEffect(() => {\n    setCount(1);\n  }, [count]);\n\n  return (\n    <div className={classes.nav}>\n      <Container>\n        {count ? (\n          <Typist\n            avgTypingDelay={50}\n            cursor={{\n              show: true,\n              blink: true,\n              element: \"\",\n              hideWhenDone: false,\n              hideWhenDoneDelay: 1000,\n            }}\n            onTypingDone={() => setCount(0)}\n          >\n            <Typography variant=\"h4\">Email Verify</Typography>\n            <Typist.Backspace count={11} delay={800} />\n          </Typist>\n        ) : (\n          \"\"\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div class=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Hints = () => {\n  return (\n    <div>\n      <List>\n        <ListItem>\n          <ListItemText primary=\"1. Upload CSV format file \" />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary=\"2. Emails must be in 1 column (You may include unlimited columns of other data).\" />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary=\"3. When finished uploading, you may analyze or clean your list.\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Hints;\n","import React, { Fragment } from \"react\";\n\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  result: {\n    minWidth: \"90%\",\n    maxWidth: \"90%\",\n    minHeight: \"50vh\",\n    maxHeight: \"50vh\",\n    background: \"transparent\",\n    border: \"1px solid #f5f5f5\",\n    color: \"white\",\n    overflowY: \"auto\",\n    position: \"relative\",\n\n    \"&:focus\": {\n      outline: 0,\n    },\n  },\n});\nconst Verified = ({ result }) => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <Typography style={{ color: \"#bdbdbd\" }}>\n        Here are you verify emails\n      </Typography>\n      <br />\n\n      <div className={classes.result}>\n        {result.msg.map((email) => (\n          <Typography style={{ padding: \"5px\" }}>{email}</Typography>\n        ))}\n      </div>\n\n      <Typography variant=\"h6\" style={{ color: \"teal\" }}>\n        {result.filtered}% of emails filtered out\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default Verified;\n","import { Card, CardContent, Container, Typography } from \"@material-ui/core\";\nimport React, { useContext, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Spinner from \"./Spinner\";\nimport Hints from \"./Hints\";\nimport EmailContext from \"../context/emailContext\";\nimport Verified from \"./Verified\";\nconst useStyles = makeStyles({\n  card: {\n    minHeight: \"82vh\",\n    maxHeight: \"82vh\",\n    background: \"transparent\",\n    color: \"#f5f5f5\",\n    \"@media (max-width:780px)\": {\n      // eslint-disable-line no-useless-computed-key\n      maxHeight: \"82vh\",\n      height: \"fit-content\",\n    },\n  },\n  spinner: {\n    padding: 25,\n    marginBottom: 5,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n});\nconst RightSide = () => {\n  const classes = useStyles();\n  const { processing, downloading, uploading, result } =\n    useContext(EmailContext);\n  return (\n    <Card elevation={2} className={classes.card}>\n      <CardContent>\n        <Container className={classes.spinner}>\n          {!result ? (\n            <Fragment>\n              <Hints />\n              {(uploading || processing || downloading) && <Spinner />}\n              {uploading && <Typography>uploading ...</Typography>}\n              {processing && <Typography>processing ...</Typography>}\n              {downloading && <Typography>downloading results ...</Typography>}\n            </Fragment>\n          ) : (\n            <Verified result={result} />\n          )}\n        </Container>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RightSide;\n","import React, { useState, useContext } from \"react\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport EmailContext from \"../context/emailContext\";\n\nconst useStyles = makeStyles({\n  container: {\n    minHeight: \"80vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    \"@media (max-width:780px)\": {\n      // eslint-disable-line no-useless-computed-key\n      maxHeight: \"80vh\",\n      height: \"fit-content\",\n    },\n  },\n  uploadBtn: {\n    marginTop: 15,\n    width: \"fit-content\",\n  },\n});\n\nconst UploadFrom = () => {\n  const classes = useStyles();\n\n  const { processing, downloading, uploading, upload } =\n    useContext(EmailContext);\n\n  const [file, setFiles] = useState([]);\n  const [error, setError] = useState({\n    status: false,\n    msg: null,\n  });\n\n  const handleFiles = (file) => {\n    setFiles(file);\n  };\n\n  const uploadAndAnalyze = () => {\n    if (file.length === 0) {\n      setError({\n        status: true,\n        msg: \"Please upload a file\",\n      });\n    } else if (file.length > 1) {\n      setError({\n        status: true,\n        msg: \"Please upload only one file\",\n      });\n    } else {\n      setError({\n        status: false,\n        msg: null,\n      });\n      upload(file);\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      {error.status && (\n        <Typography variant=\"h6\" style={{ color: \"#f5f5f5\" }}>\n          {error.msg}\n        </Typography>\n      )}\n      <DropzoneArea\n        acceptedFiles={[\".csv\"]}\n        showPreviews={false}\n        maxFileSize={10000000}\n        onChange={handleFiles}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.uploadBtn}\n        endIcon={<ChevronRightIcon style={{ color: \"black\" }} />}\n        onClick={uploadAndAnalyze}\n        disabled={processing || uploading || downloading}\n      >\n        ANALYZE & CLEAN\n      </Button>\n    </div>\n  );\n};\n\nexport default UploadFrom;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport RightSide from \"../components/RightSide\";\nimport UploadFrom from \"../components/UploadFrom\";\n// import EmailContext from \"../context/emailContext\";\nimport Zoom from \"react-reveal/Zoom\";\nconst Content = () => {\n  // const { processing, downloading, uploading } = useContext(EmailContext);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={6}>\n        <Zoom>\n          <UploadFrom />\n        </Zoom>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Zoom>\n          <RightSide />\n        </Zoom>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n","import EmailState from \"./context/EmailState\";\nimport \"./App.css\";\nimport { Container } from \"@material-ui/core\";\nimport Header from \"./layout/Header\";\nimport Content from \"./layout/Content\";\n\nfunction App() {\n  return (\n    <EmailState>\n      <Header />\n      <Container>\n        <Content />\n      </Container>\n    </EmailState>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}